// Mocks generated by Mockito 5.0.16 from annotations
// in tech_challenge_flutter/test/mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tech_challenge_flutter/data/github_issue/dao/api_rest_issue_dao.dart'
    as _i9;
import 'package:tech_challenge_flutter/data/github_issue/model/api_issue_response_model.dart'
    as _i4;
import 'package:tech_challenge_flutter/data/github_repo/dao/api_rest_repo_dao.dart'
    as _i8;
import 'package:tech_challenge_flutter/data/github_repo/model/api_repo_response_model.dart'
    as _i3;
import 'package:tech_challenge_flutter/domain/github_repo/repo_model.dart'
    as _i7;
import 'package:tech_challenge_flutter/domain/github_repo/repo_repository.dart'
    as _i5;
import 'package:tech_challenge_flutter/domain/utils.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePair_0<E, F> extends _i1.Fake implements _i2.Pair<E, F> {}

class _FakeApiRepoResponseModel_1 extends _i1.Fake
    implements _i3.ApiRepoResponseModel {}

class _FakeApiIssueResponseModel_2 extends _i1.Fake
    implements _i4.ApiIssueResponseModel {}

/// A class which mocks [RepoRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepoRepository extends _i1.Mock implements _i5.RepoRepository {
  MockRepoRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Pair<List<_i7.RepoModel>, int>>
      getRepositoriesWithNumberOfPages(
              {String? remoName,
              _i2.SortType? sortType = _i2.SortType.created,
              _i2.SortDirection? sortDirection = _i2.SortDirection.asc,
              int? limit = 10,
              int? page = 1}) =>
          (super.noSuchMethod(
                  Invocation.method(#getRepositoriesWithNumberOfPages, [], {
                    #remoName: remoName,
                    #sortType: sortType,
                    #sortDirection: sortDirection,
                    #limit: limit,
                    #page: page
                  }),
                  returnValue: Future<_i2.Pair<List<_i7.RepoModel>, int>>.value(
                      _FakePair_0<List<_i7.RepoModel>, int>()))
              as _i6.Future<_i2.Pair<List<_i7.RepoModel>, int>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ApiRestRepoDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiRestRepoDao extends _i1.Mock implements _i8.ApiRestRepoDao {
  MockApiRestRepoDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.ApiRepoResponseModel> getRepos(
          {String? repoName,
          String? sortType,
          String? sortDirection,
          int? limit,
          int? page}) =>
      (super.noSuchMethod(
              Invocation.method(#getRepos, [], {
                #repoName: repoName,
                #sortType: sortType,
                #sortDirection: sortDirection,
                #limit: limit,
                #page: page
              }),
              returnValue: Future<_i3.ApiRepoResponseModel>.value(
                  _FakeApiRepoResponseModel_1()))
          as _i6.Future<_i3.ApiRepoResponseModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ApiRestIssueDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiRestIssueDao extends _i1.Mock implements _i9.ApiRestIssueDao {
  MockApiRestIssueDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.ApiIssueResponseModel> getIssues(
          {String? repoFullName,
          String? sortType,
          String? sortDirection,
          int? limit,
          int? page}) =>
      (super.noSuchMethod(
              Invocation.method(#getIssues, [], {
                #repoFullName: repoFullName,
                #sortType: sortType,
                #sortDirection: sortDirection,
                #limit: limit,
                #page: page
              }),
              returnValue: Future<_i4.ApiIssueResponseModel>.value(
                  _FakeApiIssueResponseModel_2()))
          as _i6.Future<_i4.ApiIssueResponseModel>);
  @override
  String toString() => super.toString();
}
